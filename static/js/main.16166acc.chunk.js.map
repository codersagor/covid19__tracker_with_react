{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","contianer","Grid","container","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeAbleUrl","axios","get","dailySummary","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","site__logo","alt","src","coronaImage","follow__me","href","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16166acc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1SYYo\",\"card\":\"Cards_card__1Ej1x\",\"infected\":\"Cards_infected__k6mJ5\",\"deaths\":\"Cards_deaths__1WDwd\",\"recovered\":\"Cards_recovered__1YXLl\"};","import React, { Component } from 'react';\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport cx from 'classnames'\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\r\n    if (!confirmed) {\r\n        return 'Loading'\r\n    }\r\n\r\n    return (\r\n        <div className={styles.contianer}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSeconday\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSeconday\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSeconday\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deatch cuased by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from \"axios\";\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n  let changeAbleUrl = url;\r\n  if(country) {\r\n    changeAbleUrl = `${url}/countries/${country}`\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, dailySummary,lastUpdate },\r\n    } = await axios.get(changeAbleUrl);\r\n    return { confirmed, recovered, deaths, dailySummary, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const {data} = await axios.get(`${url}/daily`)\r\n    const modifiedData =  data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(\"Error\");\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {data: {countries}} = await axios.get(`${url}/countries`);\r\n   return countries.map((country) => country.name)\r\n  } catch (error) {\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport styles from '../Chart/Chart.module.css'\r\n\r\nconst Chart = ({data: {confirmed, recovered ,deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchApi();\r\n    }, []);\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n                <Line data={{\r\n                    labels: dailyData.map(({ date }) => date),\r\n                    datasets: [{\r\n                        data: dailyData.map(({ confirmed }) => confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    }, {\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                        fill: true,\r\n                    }],\r\n                }}\r\n                />) : null\r\n    );\r\n\r\n    console.log(confirmed, recovered, deaths);\r\n\r\n    const barChart = (\r\n        confirmed ? (  \r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        labels: 'People',\r\n                        backgroundColor: [\r\n                            'rgba(0, 0, 250, .5)',\r\n                            'rgba(0, 250, 0, .5)',\r\n                            'rgba(250, 0, 0, .5)',\r\n                        ],\r\n                        data: [confirmed.value,recovered.value,deaths.value]\r\n                    }]\r\n                }}\r\n                 \r\n                options={\r\n                    {\r\n                        legend: { display: false },\r\n                        title: { display: true, text: `Current state in ${country}` }\r\n\r\n                    }\r\n                }\r\n            />\r\n        ) : null\r\n    )\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from '../CountryPicker/CountryPicker.module.css'\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n        fetchApi();\r\n    }, [fetchedCountries]);\r\n    return (\r\n        <div>\r\n            <FormControl className={styles.formControl}>\r\n                <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                    <option value=\"\">Global</option>\r\n                    {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React, { Component } from 'react'\r\nimport { Cards, Chart, CountryPicker } from './components'\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api/index'\r\nimport coronaImage from './images/image.png'\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData })\r\n    }\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({\r\n            data: fetchedData,\r\n            country: country,\r\n        });\r\n    }\r\n    render() {\r\n        const { data,country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                \r\n                <img className={styles.site__logo} alt='COVID-19' src={coronaImage} />\r\n\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n                <a className={styles.follow__me} href=\"https://www.facebook.com/webmaster.sagor.bd/\" >\r\n                    AB Sagor\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1knIp\",\"site__logo\":\"App_site__logo__33YbW\",\"follow__me\":\"App_follow__me__1Ytw7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2qgIq\",\"site__logo\":\"Chart_site__logo__3lA6w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2jNsP\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}